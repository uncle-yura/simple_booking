version: "3.9"
volumes:
  static_volume:
  locale_volume:
  media_volume:
  db_volume:

services:
  backend: &backend
    build:
      context: ./backend
      target: dev
    volumes:
      - static_volume:/usr/src/backend/static
      - locale_volume:/usr/src/backend/locale
      - media_volume:/usr/src/backend/media
      - ./backend/base:/usr/src/backend/base
      - ./backend/blog:/usr/src/backend/blog
      - ./backend/booking:/usr/src/backend/booking
      - ./backend/config:/usr/src/backend/config
      - ./backend/contact:/usr/src/backend/contact
      - ./backend/gallery:/usr/src/backend/gallery
      - ./backend/templates:/usr/src/backend/templates
    command: >
      sh -c "wait-for-it -t 60 db_pg:5432 -- python ./manage.py runserver 0.0.0.0:8080"
    ports:
      - 8080:8080
    environment:
      - SQL_BACKEND=postgresql
      - SQL_HOST=db_pg
      - SQL_NAME=dbdevbooking
      - SQL_PORT=5432
      - SQL_PW=example
      - SQL_USER=example
    env_file: ./backend/.env.dev
    depends_on:
      - db_pg

  backend_migration:
    <<: *backend
    image: ${BACKEND_MIGRATION_IMAGE:-empty}:${BACKEND_MIGRATION_TAG:-empty}
    command: >
      sh -c "wait-for-it -t 60 db_pg:5432 -- python ./manage.py migrate &&
      python ./manage.py creategroups &&
      python ./manage.py createtheme &&
      python ./manage.py collectstatic --noinput &&
      python ./manage.py seeddata &&
      python ./manage.py compilemessages --locale=uk &&
      python ./manage.py compilemessages --locale=ru"
    ports: []

  db_pg:
    container_name: db_pg
    image: postgres:12.0-alpine
    ports:
      - "6543:5432"
    volumes:
      - db_volume:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_DB: dbdevbooking
      POSTGRES_USER: example
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U example -d dbdevbooking"]
      interval: 10s
      timeout: 5s
      retries: 5